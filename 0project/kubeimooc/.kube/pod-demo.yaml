apiVersion: v1    #必选： API版本号
kind: Pod         #必选： pod
metadata:           #必选： 元数据
  name: string        #必选：pod名称
  namespace: string   #pod所属的命名空间，默认为 default
  labels:             #自定义标签
    role: string         #自定义标签名称/值
    role2: string        #自定义标签名称/值
  annotations:
    name: string      #自定义注释列表
spec:                 #必选: Pod中容器的详细定义(期望)

  imagePullSecrets:
    - name: myregistrykey
  containers:         #必选：pod中容器列表
    - name: string     #必选：容器名称
      image: string    #必选：容器的镜像名称
      # 镜像拉取策略
      # Always        下载镜像
      # IfNotPresent  优先使用本地镜像
      # Never         仅使用本地镜像
      imagePullPolicy:  Never

      # 容器的启动命令列表，如不指定，使用打包时使用的启动命令
      command: ["/bin/sh", "-c", "echo Hello Kubernetes && sleep 10"]
      args: # 容器的启动命令参数列表
        - "-c"
        - "echo 123"
      workingDir: string # 容器的工作目录
      volumeMounts:
        - mountPath: string #存储卷在容器内 mount 的绝对路径，应少于512字符
          name: string      #引用pod定义的共享存储卷的名称，需要用 volumes[] 部分定义的卷名
          readOnly: false   #是否为只读模式 bollean

      ports:  #暴露的端口列表
        - name: string        # 端口号名称
          containerPort: 80   # 容器需要监听的端口
          hostPort: 80        # 容器主机需要的端口默认与 containerPort 相同
          protocol: TCP       # 协议 TCP、UDP
      env:    #容器运行前需设置的环境变量列表
        - name: string    # 环境变量名称
          value: string   # 环境变量值
      resources:  # 资源限制和请求的设置
        limits:   # 资源限制
          cpu: string     #  CPU限制，单位可以是核心数（如 "1"）或 millicores（如 "500m"）
          memory: string  # 内存限制，单位可以是 Mi、Gi 等（如 "512Mi"、"1Gi"）
        requests: # 资源请求（调度时的最小保证）
          cpu: "0.5"    # CPU请求，单位同上
          memory: "512Mi"
      # 对pod内容器健康检查的设置，当探测无响应几次后会自动重启容器
      # 检查方法： exec、httpGet 、 tcpSocket 对一个容器值设置一个方法即可
      livenessProbe:
        exec:
          command: ["string CMD"] # exec方式需要命令或脚本
        httpGet:
          path: /healthz  # 检查的路径
          port: 8080      # 容器端口
        tcpSocket:
          port: 8080  # 检查的端口
        initialDelaySeconds: 5  # 容器启动后等待多少秒再开始探测
        periodSeconds: 10       # 每隔多少秒探测一次
        timeoutSeconds: 1       # 探测超时时间
        failureThreshold: 3     # 连续失败多少次才认为容器不健康
        successThreshold: 1     # 连续成功多少次才认为容器健康（默认1）
      # 重启策略
      # Always      默认策略,可省略。只要容器退出（无论成功或失败），Kubernetes 都会尝试重启它。适用于长期运行的服务（如 Web 服务器、数据库）。
      # OnFailure   失败时重启-仅当容器以 非零退出码（失败） 退出时，Kubernetes 才会重启它。适用于批处理任务（如数据处理脚本）。
      # Never       永不重启-无论容器是否成功退出，都不会重启。适用于一次性任务（如 CI/CD 构建任务）。
      restartPolicy: Always





  restartPolicy: Always
  